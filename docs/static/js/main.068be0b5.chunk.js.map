{"version":3,"sources":["utils.js","DatePicker.js","AppControls.js","TimeBlock.js","App.js","reportWebVitals.js","index.js"],"names":["dateFmt","date","format","timeFmt","time","parseDate","dateStr","parse","Date","parseTime","timeStr","CustomPickersDay","styled","PickersDay","shouldForwardProp","props","theme","isHighlight","backgroundColor","palette","primary","main","color","common","white","dark","CustomDay","selectedDates","setSelectedDates","LocalizationProvider","dateAdapter","AdapterDateFns","StaticDatePicker","displayStaticWrapperAs","value","shouldDisableDate","isWeekend","allowSameDateSelection","onChange","selDate","fdstr","setDate","hours","minutes","seconds","milliseconds","console","log","has","delete","set","map","Map","sort","a","b","compareAsc","renderDay","_selectedDates","pickersDayProps","size","get","renderInput","params","TextField","inputFormat","IOSSlider","Slider","mode","height","padding","fontSize","fontWeight","top","text","AppControls","timeStep","setTimeStep","dayHoursRange","setDayHoursRange","resetTimesMap","Box","sx","width","FormLabel","component","getAriaLabel","event","newValue","activeThumb","Array","isArray","Math","min","max","valueLabelDisplay","disableSwap","FormControl","RadioGroup","row","aria-label","name","e","target","FormControlLabel","label","control","Radio","Button","variant","onClick","zeros","fuzzyIntervalOverlap","start","end","afuzzy","addTime","bfuzzy","areIntervalsOverlapping","findTimeBlocks","selTimes","length","firstTime","blocks","addMinutes","pervIdx","idx","nextStart","nextBlock","minTime","maxTime","push","interval","join","TimeBlock","isSelected","setIsSelected","style","className","DayBlock","timeRange","selectedTimes","setSelectedTimes","updateSelectedTimes","d","indexOf","splice","orderedTimes","t","dt","startTimes","eachMinuteOfInterval","step","includes","RenderSelectedGroupedTimes","dateTimes","DateTimeBlockStrs","entries","kv","App","React","timesMap","setTimesMap","copyErrMsg","setCopyErrMsg","darkTheme","createTheme","handleCopy","copyText","timeBlockStr","FormatGroupedTimesStr","navigator","clipboard","writeText","then","err","ThemeProvider","Stack","direction","spacing","Tooltip","title","IconButton","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.068be0b5.chunk.js","sourcesContent":["/**\n * Utility Methods\n */\n\nimport { format, parse } from 'date-fns'\n\nexport function dateFmt(date) {\n  return format(date, 'EEE, MMM. dd')\n}\n\nexport function timeFmt(time) {\n  return format(time, 'h:mmaaa')\n}\n\nexport function parseDate(dateStr) {\n  return parse(dateStr, 'EEE, MMM. dd', new Date())\n}\n\nexport function parseTime(dateStr, timeStr) {\n  return parse(dateStr + ' ' + timeStr, 'EEE, MMM. dd h:mmaaa', new Date())\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PickersDay from '@mui/lab/PickersDay';\nimport isWeekend from 'date-fns/isWeekend';\nimport { compareAsc } from 'date-fns'\nimport setDate from 'date-fns/set'\nimport { dateFmt, parseDate } from './utils.js'\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\n\nconst CustomPickersDay = styled(PickersDay, \n  {shouldForwardProp: (props) => (props !== 'isHighlight') })\n(({theme, isHighlight}) => ({\n  ...(isHighlight && {\n    // borderRadius: 0,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  })\n}));\n\n\nexport function CustomDay(props) {\n  const { selectedDates, setSelectedDates } = props\n\n  const renderWeekPickerDay = (date, _selectedDates, pickersDayProps) => {\n    let fdstr = dateFmt(date)\n    // console.log('(D): DATE: ', format(date, 'yyyy MMM dd HH:mm:ss.SSS'), fdstr, selectedDates.get(fdstr))\n\n    if ( selectedDates.size === 0 ) {\n      return <PickersDay {...pickersDayProps} />;\n    } else if ( selectedDates.get(fdstr) == null ) {\n      return <CustomPickersDay isHighlight={false} {...pickersDayProps}/>\n    } else {\n      return <CustomPickersDay isHighlight={true} {...pickersDayProps}/>\n    }\n  }\n\n  return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <StaticDatePicker\n          displayStaticWrapperAs=\"desktop\"\n          // label=\"Week picker\"\n          // orientation=\"landscape\"\n          value={null}\n          shouldDisableDate={isWeekend}\n          allowSameDateSelection={true}\n          onChange={(selDate) => {\n            let selDate0 = setDate(selDate,{hours:0, minutes:0, seconds:0, milliseconds:0})\n            let fdstr = dateFmt(selDate0)\n            console.log('DPkr chg: ', selDate, fdstr, selectedDates.has(fdstr))\n            if (selectedDates.has(fdstr)) {\n              selectedDates.delete(fdstr)\n            } else {\n              selectedDates.set(fdstr, [])\n            }\n            setSelectedDates(map => new Map([...selectedDates].sort((a,b) => compareAsc(parseDate(a[0]), parseDate(b[0])))));\n          }}\n          renderDay={renderWeekPickerDay}\n          renderInput={(params) => <TextField {...params} />}\n          inputFormat=\"'Week of' MMM d\"\n        />\n      </LocalizationProvider>\n  );\n}","/**\n * App Controls and User Settings\n */\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Slider from '@mui/material/Slider';\n\n// const iOSBoxShadow =\n// '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst IOSSlider = styled(Slider)(({ theme }) => ({\n  color: theme.palette.mode === 'dark' ? '#3880ff' : '#3880ff',\n  height: 2,\n  padding: '15px 0',\n  // '& .MuiSlider-thumb': {\n  //   height: 28,\n  //   width: 28,\n  //   backgroundColor: '#fff',\n  //   boxShadow: iOSBoxShadow,\n  //   '&:focus, &:hover, &.Mui-active': {\n  //     boxShadow:\n  //       '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n  //     // Reset on touch devices, it doesn't add specificity\n  //     '@media (hover: none)': {\n  //       boxShadow: iOSBoxShadow,\n  //     },\n  //   },\n  // },\n  '& .MuiSlider-valueLabel': {\n    fontSize: 12,\n    fontWeight: 'normal',\n    top: 40,\n    backgroundColor: 'unset',\n    color: theme.palette.text.primary,\n    // '&:before': {\n    //   display: 'none',\n    // },\n    // '& *': {\n    //   background: 'transparent',\n    //   color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n    // },\n  },\n  // '& .MuiSlider-track': {\n  //   border: 'none',\n  // },\n  // '& .MuiSlider-rail': {\n  //   opacity: 0.5,\n  //   backgroundColor: '#bfbfbf',\n  // },\n  // '& .MuiSlider-mark': {\n  //   backgroundColor: '#bfbfbf',\n  //   height: 8,\n  //   width: 1,\n  //   '&.MuiSlider-markActive': {\n  //     opacity: 1,\n  //     backgroundColor: 'currentColor',\n  //   },\n  // },\n}));\n\n\nexport default function AppControls(props) {\n  const { \n    timeStep, setTimeStep, \n    dayHoursRange, setDayHoursRange, \n    resetTimesMap \n  } = props\n\n  // TODO: Stuff app controls into component\n  // (e, range) => setDayHoursRange(range)\n  const handleHoursChange = (event, newValue, activeThumb) => {\n    const minDistance = 1\n    if (!Array.isArray(newValue)) {\n      return;\n    }\n    if (activeThumb === 0) {\n      setDayHoursRange([Math.min(newValue[0], dayHoursRange[1] - minDistance), dayHoursRange[1]]);\n    } else {\n      setDayHoursRange([dayHoursRange[0], Math.max(newValue[1], dayHoursRange[0] + minDistance)]);\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{width: '20vw' }}>\n        {/* <Slider */}\n        <FormLabel component=\"legend\">Hours Range</FormLabel>\n        <IOSSlider\n          // gutterBottom\n          getAriaLabel={() => 'Day Hours Range'}\n          value={dayHoursRange}\n          onChange={ handleHoursChange }\n          valueLabelDisplay=\"on\"\n          disableSwap\n          min={0}\n          max={24}\n          size=\"small\"\n          // getAriaValueText={dayHoursRange.join(' - ')}\n        />\n      </Box>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Time Step</FormLabel>\n        <RadioGroup \n            row\n            aria-label=\"Time Step\" name=\"timestep-opt\"\n            value={timeStep}\n            onChange={e => setTimeStep(e.target.value)}\n        >\n          <FormControlLabel value={60} label=\"60\" control={<Radio/>} />\n          <FormControlLabel value={30} label=\"30\" control={<Radio/>} />\n          <FormControlLabel value={15} label=\"15\" control={<Radio/>} />\n        </RadioGroup>\n      </FormControl>\n      <Button variant=\"contained\" onClick={() => { resetTimesMap(); }}>Reset</Button>\n      <span> </span>  {/* FIXME: This is a hack */}\n    </>\n  );\n}","/**\n * Component for rendering the nodes along the TimeLine\n * This is responsible for managing the timeline continuum of events.\n */\nimport React from 'react';\nimport { timeFmt, parseDate, parseTime } from './utils.js'\nimport eachMinuteOfInterval from 'date-fns/eachMinuteOfInterval'\nimport areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping'\nimport setDate from 'date-fns/set'\nimport addMinutes from 'date-fns/addMinutes'\nimport addTime from 'date-fns/add'\nimport maxTime from 'date-fns/max'\nimport minTime from 'date-fns/min'\n\nconst zeros = {minutes:0, seconds:0, milliseconds:0}\n\nfunction fuzzyIntervalOverlap(a, b) {\n  if (a == null || b == null \n    || a.start == null || b.start == null\n    || a.end == null || b.end == null) {\n    return false\n  }\n  let afuzzy = {\n    start: addTime(a.start, {seconds: -10}),\n    end: addTime(a.end, {seconds: 10}),\n  }\n  let bfuzzy = {\n    start: addTime(b.start, {seconds: -10}),\n    end: addTime(b.end, {seconds: 10}),\n  }\n  return areIntervalsOverlapping(afuzzy, bfuzzy)\n}\n\nfunction findTimeBlocks(dateStr, selTimes, timeStep) {\n  // FIXME: .map() will not return the correct size (reduce instead ?)\n  // Need to break this out to another function\n  // const dateStr = kv[0]\n  // const selTimes = kv[1]\n  console.log('(D): DateTimes Entries: ', timeStep, dateStr, selTimes)\n  if (selTimes.length === 0) {\n    return [dateStr, ['NA']]\n  }\n  let firstTime = parseTime(dateStr, selTimes[0])\n  let blocks = [{\n    start: firstTime, \n    end: addMinutes(firstTime, timeStep)\n  }];\n  // console.log('(D): blocks 0: ', dateStr, selTimes[0], firstTime, blocks)\n  let pervIdx = 0;\n  for (let idx = 1; idx < selTimes.length; idx++) {\n    let nextStart = parseTime(dateStr, selTimes[idx])\n    let nextBlock = {\n      start: nextStart,\n      end: addMinutes(nextStart, timeStep),\n    }\n    // console.log('(D): blocks: ', idx, pervIdx, blocks, blocks[pervIdx], nextBlock)\n    if (fuzzyIntervalOverlap(blocks[pervIdx], nextBlock)) {\n      // console.log('(D): min max ', \n      //   minTime([blocks[pervIdx].start, nextBlock.start]),\n      //   maxTime([blocks[pervIdx].end, nextBlock.end])\n      // )\n      blocks[pervIdx].start = minTime([blocks[pervIdx].start, nextBlock.start])\n      blocks[pervIdx].end = maxTime([blocks[pervIdx].end, nextBlock.end])\n      // console.log('(D): fuzzy ', idx, pervIdx, nextBlock, blocks[pervIdx])\n    } else {\n      pervIdx++\n      blocks.push(nextBlock)\n    }\n  }\n  let blockStrs = blocks.map( interval => `${timeFmt(interval.start)}-${timeFmt(interval.end)}`).join('; ')\n  return [dateStr, blockStrs]\n}\n\n/**\n * \n */\nexport function TimeBlock(props) {\n  const { time, isSelected, setIsSelected } = props\n  let style = isSelected ? \"time-block-selected\" : \"time-block\"\n  // onMouseDown={(e) => {setIsSelected(time)}}\n  return (\n    <div onClick={(e) => {setIsSelected(time)}} className={style} >\n      <span>{time}</span>\n    </div>\n  )\n}\n\n/**\n * DayBlock Component\n * Render a column of times in a day\n * @param date: string \"MMM dd\"\n * @param timeRange: [begin, end]\n * @param timeIncrements size of each time block (minutes)\n * TODO: \n *   + Add support for shift / Cmd click...\n */\nexport function DayBlock(props) {\n  const { date, timeRange, timeStep, selectedTimes, setSelectedTimes } = props\n  const updateSelectedTimes = (time) => {\n    // TODO: Add remove from list if \"deselected\"\n    let d = selectedTimes.get(date)\n    let idx = d.indexOf(time)\n    if (idx >= 0) {\n      d.splice(idx, 1)\n    } else {\n      d.push(time)\n      let orderedTimes = d.map(t => parseTime(date, t)).sort().map(dt => timeFmt(dt))\n      selectedTimes.set(date, orderedTimes)\n      console.log('(D): times: ', date, d, orderedTimes, selectedTimes)\n    }\n    setSelectedTimes(map => new Map(selectedTimes))\n  }\n  let startTimes = eachMinuteOfInterval(\n    {\n      start: setDate(parseDate(date), {...zeros, hours:timeRange.start}),\n      end:   setDate(parseDate(date), {...zeros, hours:timeRange.end}),\n    },\n    { step: timeStep }\n  )\n  return (\n    <div className=\"time-column\">\n      {/* <h2>{format(date, 'MMM dd')}</h2> */}\n      <h2>{date}</h2>\n      { startTimes.map((time) => \n        <TimeBlock \n          key={date + time}\n          time={timeFmt(time)}\n          isSelected={selectedTimes.get(date).includes(timeFmt(time))} \n          setIsSelected={updateSelectedTimes}\n        />\n      )}\n    </div>\n  )\n}\n\n/**\n * Used for rendering the times selected as debug text output\n */\nexport function RenderSelectedTimes(props) {\n  const { dateTimes } = props\n  return (\n    <div className=\"app-column\">\n      {[...dateTimes.entries()].map( (e) =>\n        <span className=\"app-row\" key={e[0]}>\n          {/* <span style={{'font-weight': 'bold'}}>{format(e[0], 'yyyy MMM dd HH:mm:ss.SSS')}</span>: {e[1].join('; ')} */}\n          <span style={{'fontWeight': 'bold'}}>{e[0]}</span> \n          <span style={{'fontFamily': 'monospace'}}>{e[1].join('; ')}</span>\n        </span>\n      )}\n    </div>\n  )\n}\n\n/**\n * Used for rendering the times selected as debug text output\n * Group overlapping times into common block intervals\n */\nexport function RenderSelectedGroupedTimes(props) {\n  const { dateTimes, timeStep } = props\n  console.log('(D): Render Groups...')\n  let DateTimeBlockStrs = [...dateTimes.entries()].map( kv => findTimeBlocks(kv[0], kv[1], timeStep) )  // TODO: Sort the time array\n  return (\n    <div className=\"app-column\">\n        {DateTimeBlockStrs.map( (kv => (\n            <span className=\"app-row\" key={kv[0]}>\n              {/* <span style={{'font-weight': 'bold'}}>{format(e[0], 'yyyy MMM dd HH:mm:ss.SSS')}</span>: {e[1].join('; ')} */}\n              <span style={{'fontWeight': 'bold'}}>{kv[0]}</span> \n              <span style={{'fontFamily': 'monospace'}}>{kv[1]}</span>\n            </span>\n          )\n      ))}\n    </div>\n  )\n}\n\n/**\n * Export times data to string\n */\nexport function FormatTimesStr(dateTimes) {\n  // if (dateTimes == null) return \"\";\n  return [...dateTimes.entries()].map( kv => `${kv[0]}: ${kv[1].join(';')}` ).join('\\n')\n}\n\n/**\n * Export grouped time blocks to string\n */\nexport function FormatGroupedTimesStr(timeStep, dateTimes) {\n  // if (dateTimes == null) return \"\";\n  return [...dateTimes.entries()]\n    .map( kv => {\n      let [dateStr, timeBlockStr] = findTimeBlocks(kv[0], kv[1], timeStep)\n      return `${dateStr}:  ${timeBlockStr}`\n    })\n    .join('\\n')\n  // return [...dateTimes.entries()].map( kv => `${kv[0]}: ${kv[1].join(';')}` ).join('\\n')\n}\n","import * as React from 'react';\nimport './App.css';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport CopyIcon from '@mui/icons-material/ContentCopy';\n\nimport { CustomDay } from \"./DatePicker.js\"\nimport AppControls from \"./AppControls.js\"\nimport { DayBlock, RenderSelectedGroupedTimes, FormatGroupedTimesStr } from \"./TimeBlock.js\"\n\n\nfunction App() {\n  // TODO: Manage these via Redux\n  const [ timesMap, setTimesMap ] = React.useState(new Map())\n  const [ timeStep, setTimeStep ] = React.useState(60)\n  const [ copyErrMsg, setCopyErrMsg ] = React.useState(null)\n  const [ dayHoursRange, setDayHoursRange ] = React.useState([8, 17]);  // TODO: use object {start, end}\n\n  function resetTimesMap() { setTimesMap(new Map()) };\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n  const handleCopy = (e) => {\n    let copyText = FormatGroupedTimesStr(timeStep, timesMap)\n    console.log('(D): copyText: ', copyText)\n    if (navigator.clipboard == null) {\n      setCopyErrMsg(\"unable to copy\")\n      return\n    }\n    navigator.clipboard.writeText(copyText)\n    .then(null, (err) => {\n      setCopyErrMsg(\"Copied failed\")\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <ThemeProvider theme={darkTheme}>\n          <Stack direction=\"row\" spacing={1}>\n            <span className=\"app-title\">Common Time</span>\n            <Tooltip title=\"Copy\">\n              <IconButton aria-label=\"copy\" onClick={handleCopy}><CopyIcon /></IconButton>\n            </Tooltip>\n          </Stack>\n          <AppControls\n            timeStep={timeStep}\n            setTimeStep={setTimeStep}\n            dayHoursRange={dayHoursRange}\n            setDayHoursRange={setDayHoursRange}\n            resetTimesMap={resetTimesMap}\n          />\n        </ThemeProvider>\n      </header>\n      <main className=\"app-content\">\n        {/* <h1>Select dates</h1> */}\n        <div className=\"app-row\">\n          <div className=\"app-column\">\n            <CustomDay selectedDates={timesMap} setSelectedDates={setTimesMap} ></CustomDay>\n          </div>\n          { [...timesMap.keys()].map(date =>\n            <DayBlock\n              key={date}\n              date={date}\n              timeRange={{start: dayHoursRange[0], end: dayHoursRange[1]}}\n              timeStep={timeStep}\n              selectedTimes={timesMap}\n              setSelectedTimes={setTimesMap}\n            />\n          ) }\n        </div>\n        {/* <div>{timesMap.size}</div> */}\n        <div>\n          {/* <div> */}\n          <Stack direction=\"row\" spacing={1}>\n            <h2>Available times</h2>\n            <Tooltip title=\"Copy\">\n              <IconButton aria-label=\"copy\" onClick={handleCopy}><CopyIcon /></IconButton>\n            </Tooltip>\n            {copyErrMsg != null && <span style={{'color': 'red'}}>{copyErrMsg}</span>}\n          </Stack>\n          {/* </div> */}\n          {/* <RenderSelectedTimes dateTimes={timesMap} /> */}\n          <RenderSelectedGroupedTimes dateTimes={timesMap} timeStep={timeStep} />\n        </div>\n        <br/>\n        {/* <div>{[...timesMap.keys()].map(t => format(t, 'yyyy MMM dd HH:mm:ss.SSS')).join('; ')}</div> */}\n        {/* <div>{[...timesMap.keys()].join('; ')}</div> */}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}